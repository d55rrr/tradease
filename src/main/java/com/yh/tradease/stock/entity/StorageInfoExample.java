package com.yh.tradease.stock.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class StorageInfoExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	protected String orderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	protected boolean distinct;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	private Integer limit;

	private Integer offset;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	public StorageInfoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	public void setLimit(Integer limit) {
		this.limit = limit;
	}

	public Integer getLimit() {
		return limit;
	}

	public void setOffset(Integer offset) {
		this.offset = offset;
	}

	public Integer getOffset() {
		return offset;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andProductIdIsNull() {
			addCriterion("product_id is null");
			return (Criteria) this;
		}

		public Criteria andProductIdIsNotNull() {
			addCriterion("product_id is not null");
			return (Criteria) this;
		}

		public Criteria andProductIdEqualTo(Integer value) {
			addCriterion("product_id =", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdNotEqualTo(Integer value) {
			addCriterion("product_id <>", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdGreaterThan(Integer value) {
			addCriterion("product_id >", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("product_id >=", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdLessThan(Integer value) {
			addCriterion("product_id <", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdLessThanOrEqualTo(Integer value) {
			addCriterion("product_id <=", value, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdIn(List<Integer> values) {
			addCriterion("product_id in", values, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdNotIn(List<Integer> values) {
			addCriterion("product_id not in", values, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdBetween(Integer value1, Integer value2) {
			addCriterion("product_id between", value1, value2, "productId");
			return (Criteria) this;
		}

		public Criteria andProductIdNotBetween(Integer value1, Integer value2) {
			addCriterion("product_id not between", value1, value2, "productId");
			return (Criteria) this;
		}

		public Criteria andProductNameIsNull() {
			addCriterion("product_name is null");
			return (Criteria) this;
		}

		public Criteria andProductNameIsNotNull() {
			addCriterion("product_name is not null");
			return (Criteria) this;
		}

		public Criteria andProductNameEqualTo(String value) {
			addCriterion("product_name =", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameNotEqualTo(String value) {
			addCriterion("product_name <>", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameGreaterThan(String value) {
			addCriterion("product_name >", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameGreaterThanOrEqualTo(String value) {
			addCriterion("product_name >=", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameLessThan(String value) {
			addCriterion("product_name <", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameLessThanOrEqualTo(String value) {
			addCriterion("product_name <=", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameLike(String value) {
			addCriterion("product_name like", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameNotLike(String value) {
			addCriterion("product_name not like", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameIn(List<String> values) {
			addCriterion("product_name in", values, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameNotIn(List<String> values) {
			addCriterion("product_name not in", values, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameBetween(String value1, String value2) {
			addCriterion("product_name between", value1, value2, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameNotBetween(String value1, String value2) {
			addCriterion("product_name not between", value1, value2, "productName");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("remark is null");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("remark is not null");
			return (Criteria) this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("remark =", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("remark <>", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("remark >", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("remark >=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("remark <", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("remark <=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("remark like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("remark not like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkIn(List<String> values) {
			addCriterion("remark in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotIn(List<String> values) {
			addCriterion("remark not in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("remark between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("remark not between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andUnitIdIsNull() {
			addCriterion("unit_id is null");
			return (Criteria) this;
		}

		public Criteria andUnitIdIsNotNull() {
			addCriterion("unit_id is not null");
			return (Criteria) this;
		}

		public Criteria andUnitIdEqualTo(Integer value) {
			addCriterion("unit_id =", value, "unitId");
			return (Criteria) this;
		}

		public Criteria andUnitIdNotEqualTo(Integer value) {
			addCriterion("unit_id <>", value, "unitId");
			return (Criteria) this;
		}

		public Criteria andUnitIdGreaterThan(Integer value) {
			addCriterion("unit_id >", value, "unitId");
			return (Criteria) this;
		}

		public Criteria andUnitIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("unit_id >=", value, "unitId");
			return (Criteria) this;
		}

		public Criteria andUnitIdLessThan(Integer value) {
			addCriterion("unit_id <", value, "unitId");
			return (Criteria) this;
		}

		public Criteria andUnitIdLessThanOrEqualTo(Integer value) {
			addCriterion("unit_id <=", value, "unitId");
			return (Criteria) this;
		}

		public Criteria andUnitIdIn(List<Integer> values) {
			addCriterion("unit_id in", values, "unitId");
			return (Criteria) this;
		}

		public Criteria andUnitIdNotIn(List<Integer> values) {
			addCriterion("unit_id not in", values, "unitId");
			return (Criteria) this;
		}

		public Criteria andUnitIdBetween(Integer value1, Integer value2) {
			addCriterion("unit_id between", value1, value2, "unitId");
			return (Criteria) this;
		}

		public Criteria andUnitIdNotBetween(Integer value1, Integer value2) {
			addCriterion("unit_id not between", value1, value2, "unitId");
			return (Criteria) this;
		}

		public Criteria andUnitNameIsNull() {
			addCriterion("unit_name is null");
			return (Criteria) this;
		}

		public Criteria andUnitNameIsNotNull() {
			addCriterion("unit_name is not null");
			return (Criteria) this;
		}

		public Criteria andUnitNameEqualTo(String value) {
			addCriterion("unit_name =", value, "unitName");
			return (Criteria) this;
		}

		public Criteria andUnitNameNotEqualTo(String value) {
			addCriterion("unit_name <>", value, "unitName");
			return (Criteria) this;
		}

		public Criteria andUnitNameGreaterThan(String value) {
			addCriterion("unit_name >", value, "unitName");
			return (Criteria) this;
		}

		public Criteria andUnitNameGreaterThanOrEqualTo(String value) {
			addCriterion("unit_name >=", value, "unitName");
			return (Criteria) this;
		}

		public Criteria andUnitNameLessThan(String value) {
			addCriterion("unit_name <", value, "unitName");
			return (Criteria) this;
		}

		public Criteria andUnitNameLessThanOrEqualTo(String value) {
			addCriterion("unit_name <=", value, "unitName");
			return (Criteria) this;
		}

		public Criteria andUnitNameLike(String value) {
			addCriterion("unit_name like", value, "unitName");
			return (Criteria) this;
		}

		public Criteria andUnitNameNotLike(String value) {
			addCriterion("unit_name not like", value, "unitName");
			return (Criteria) this;
		}

		public Criteria andUnitNameIn(List<String> values) {
			addCriterion("unit_name in", values, "unitName");
			return (Criteria) this;
		}

		public Criteria andUnitNameNotIn(List<String> values) {
			addCriterion("unit_name not in", values, "unitName");
			return (Criteria) this;
		}

		public Criteria andUnitNameBetween(String value1, String value2) {
			addCriterion("unit_name between", value1, value2, "unitName");
			return (Criteria) this;
		}

		public Criteria andUnitNameNotBetween(String value1, String value2) {
			addCriterion("unit_name not between", value1, value2, "unitName");
			return (Criteria) this;
		}

		public Criteria andStorageNumberIsNull() {
			addCriterion("storage_number is null");
			return (Criteria) this;
		}

		public Criteria andStorageNumberIsNotNull() {
			addCriterion("storage_number is not null");
			return (Criteria) this;
		}

		public Criteria andStorageNumberEqualTo(Double value) {
			addCriterion("storage_number =", value, "storageNumber");
			return (Criteria) this;
		}

		public Criteria andStorageNumberNotEqualTo(Double value) {
			addCriterion("storage_number <>", value, "storageNumber");
			return (Criteria) this;
		}

		public Criteria andStorageNumberGreaterThan(Double value) {
			addCriterion("storage_number >", value, "storageNumber");
			return (Criteria) this;
		}

		public Criteria andStorageNumberGreaterThanOrEqualTo(Double value) {
			addCriterion("storage_number >=", value, "storageNumber");
			return (Criteria) this;
		}

		public Criteria andStorageNumberLessThan(Double value) {
			addCriterion("storage_number <", value, "storageNumber");
			return (Criteria) this;
		}

		public Criteria andStorageNumberLessThanOrEqualTo(Double value) {
			addCriterion("storage_number <=", value, "storageNumber");
			return (Criteria) this;
		}

		public Criteria andStorageNumberIn(List<Double> values) {
			addCriterion("storage_number in", values, "storageNumber");
			return (Criteria) this;
		}

		public Criteria andStorageNumberNotIn(List<Double> values) {
			addCriterion("storage_number not in", values, "storageNumber");
			return (Criteria) this;
		}

		public Criteria andStorageNumberBetween(Double value1, Double value2) {
			addCriterion("storage_number between", value1, value2, "storageNumber");
			return (Criteria) this;
		}

		public Criteria andStorageNumberNotBetween(Double value1, Double value2) {
			addCriterion("storage_number not between", value1, value2, "storageNumber");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeIsNull() {
			addCriterion("storage_freeze is null");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeIsNotNull() {
			addCriterion("storage_freeze is not null");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeEqualTo(Double value) {
			addCriterion("storage_freeze =", value, "storageFreeze");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeNotEqualTo(Double value) {
			addCriterion("storage_freeze <>", value, "storageFreeze");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeGreaterThan(Double value) {
			addCriterion("storage_freeze >", value, "storageFreeze");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeGreaterThanOrEqualTo(Double value) {
			addCriterion("storage_freeze >=", value, "storageFreeze");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeLessThan(Double value) {
			addCriterion("storage_freeze <", value, "storageFreeze");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeLessThanOrEqualTo(Double value) {
			addCriterion("storage_freeze <=", value, "storageFreeze");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeIn(List<Double> values) {
			addCriterion("storage_freeze in", values, "storageFreeze");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeNotIn(List<Double> values) {
			addCriterion("storage_freeze not in", values, "storageFreeze");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeBetween(Double value1, Double value2) {
			addCriterion("storage_freeze between", value1, value2, "storageFreeze");
			return (Criteria) this;
		}

		public Criteria andStorageFreezeNotBetween(Double value1, Double value2) {
			addCriterion("storage_freeze not between", value1, value2, "storageFreeze");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayIsNull() {
			addCriterion("storage_onway is null");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayIsNotNull() {
			addCriterion("storage_onway is not null");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayEqualTo(Double value) {
			addCriterion("storage_onway =", value, "storageOnway");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayNotEqualTo(Double value) {
			addCriterion("storage_onway <>", value, "storageOnway");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayGreaterThan(Double value) {
			addCriterion("storage_onway >", value, "storageOnway");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayGreaterThanOrEqualTo(Double value) {
			addCriterion("storage_onway >=", value, "storageOnway");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayLessThan(Double value) {
			addCriterion("storage_onway <", value, "storageOnway");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayLessThanOrEqualTo(Double value) {
			addCriterion("storage_onway <=", value, "storageOnway");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayIn(List<Double> values) {
			addCriterion("storage_onway in", values, "storageOnway");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayNotIn(List<Double> values) {
			addCriterion("storage_onway not in", values, "storageOnway");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayBetween(Double value1, Double value2) {
			addCriterion("storage_onway between", value1, value2, "storageOnway");
			return (Criteria) this;
		}

		public Criteria andStorageOnwayNotBetween(Double value1, Double value2) {
			addCriterion("storage_onway not between", value1, value2, "storageOnway");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableIsNull() {
			addCriterion("storage_avaliable is null");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableIsNotNull() {
			addCriterion("storage_avaliable is not null");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableEqualTo(Double value) {
			addCriterion("storage_avaliable =", value, "storageAvaliable");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableNotEqualTo(Double value) {
			addCriterion("storage_avaliable <>", value, "storageAvaliable");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableGreaterThan(Double value) {
			addCriterion("storage_avaliable >", value, "storageAvaliable");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableGreaterThanOrEqualTo(Double value) {
			addCriterion("storage_avaliable >=", value, "storageAvaliable");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableLessThan(Double value) {
			addCriterion("storage_avaliable <", value, "storageAvaliable");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableLessThanOrEqualTo(Double value) {
			addCriterion("storage_avaliable <=", value, "storageAvaliable");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableIn(List<Double> values) {
			addCriterion("storage_avaliable in", values, "storageAvaliable");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableNotIn(List<Double> values) {
			addCriterion("storage_avaliable not in", values, "storageAvaliable");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableBetween(Double value1, Double value2) {
			addCriterion("storage_avaliable between", value1, value2, "storageAvaliable");
			return (Criteria) this;
		}

		public Criteria andStorageAvaliableNotBetween(Double value1, Double value2) {
			addCriterion("storage_avaliable not between", value1, value2, "storageAvaliable");
			return (Criteria) this;
		}

		public Criteria andCdateIsNull() {
			addCriterion("cdate is null");
			return (Criteria) this;
		}

		public Criteria andCdateIsNotNull() {
			addCriterion("cdate is not null");
			return (Criteria) this;
		}

		public Criteria andCdateEqualTo(Date value) {
			addCriterion("cdate =", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateNotEqualTo(Date value) {
			addCriterion("cdate <>", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateGreaterThan(Date value) {
			addCriterion("cdate >", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateGreaterThanOrEqualTo(Date value) {
			addCriterion("cdate >=", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateLessThan(Date value) {
			addCriterion("cdate <", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateLessThanOrEqualTo(Date value) {
			addCriterion("cdate <=", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateIn(List<Date> values) {
			addCriterion("cdate in", values, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateNotIn(List<Date> values) {
			addCriterion("cdate not in", values, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateBetween(Date value1, Date value2) {
			addCriterion("cdate between", value1, value2, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateNotBetween(Date value1, Date value2) {
			addCriterion("cdate not between", value1, value2, "cdate");
			return (Criteria) this;
		}

		public Criteria andMdateIsNull() {
			addCriterion("mdate is null");
			return (Criteria) this;
		}

		public Criteria andMdateIsNotNull() {
			addCriterion("mdate is not null");
			return (Criteria) this;
		}

		public Criteria andMdateEqualTo(Date value) {
			addCriterion("mdate =", value, "mdate");
			return (Criteria) this;
		}

		public Criteria andMdateNotEqualTo(Date value) {
			addCriterion("mdate <>", value, "mdate");
			return (Criteria) this;
		}

		public Criteria andMdateGreaterThan(Date value) {
			addCriterion("mdate >", value, "mdate");
			return (Criteria) this;
		}

		public Criteria andMdateGreaterThanOrEqualTo(Date value) {
			addCriterion("mdate >=", value, "mdate");
			return (Criteria) this;
		}

		public Criteria andMdateLessThan(Date value) {
			addCriterion("mdate <", value, "mdate");
			return (Criteria) this;
		}

		public Criteria andMdateLessThanOrEqualTo(Date value) {
			addCriterion("mdate <=", value, "mdate");
			return (Criteria) this;
		}

		public Criteria andMdateIn(List<Date> values) {
			addCriterion("mdate in", values, "mdate");
			return (Criteria) this;
		}

		public Criteria andMdateNotIn(List<Date> values) {
			addCriterion("mdate not in", values, "mdate");
			return (Criteria) this;
		}

		public Criteria andMdateBetween(Date value1, Date value2) {
			addCriterion("mdate between", value1, value2, "mdate");
			return (Criteria) this;
		}

		public Criteria andMdateNotBetween(Date value1, Date value2) {
			addCriterion("mdate not between", value1, value2, "mdate");
			return (Criteria) this;
		}

		public Criteria andMinStorageIsNull() {
			addCriterion("min_storage is null");
			return (Criteria) this;
		}

		public Criteria andMinStorageIsNotNull() {
			addCriterion("min_storage is not null");
			return (Criteria) this;
		}

		public Criteria andMinStorageEqualTo(Double value) {
			addCriterion("min_storage =", value, "minStorage");
			return (Criteria) this;
		}

		public Criteria andMinStorageNotEqualTo(Double value) {
			addCriterion("min_storage <>", value, "minStorage");
			return (Criteria) this;
		}

		public Criteria andMinStorageGreaterThan(Double value) {
			addCriterion("min_storage >", value, "minStorage");
			return (Criteria) this;
		}

		public Criteria andMinStorageGreaterThanOrEqualTo(Double value) {
			addCriterion("min_storage >=", value, "minStorage");
			return (Criteria) this;
		}

		public Criteria andMinStorageLessThan(Double value) {
			addCriterion("min_storage <", value, "minStorage");
			return (Criteria) this;
		}

		public Criteria andMinStorageLessThanOrEqualTo(Double value) {
			addCriterion("min_storage <=", value, "minStorage");
			return (Criteria) this;
		}

		public Criteria andMinStorageIn(List<Double> values) {
			addCriterion("min_storage in", values, "minStorage");
			return (Criteria) this;
		}

		public Criteria andMinStorageNotIn(List<Double> values) {
			addCriterion("min_storage not in", values, "minStorage");
			return (Criteria) this;
		}

		public Criteria andMinStorageBetween(Double value1, Double value2) {
			addCriterion("min_storage between", value1, value2, "minStorage");
			return (Criteria) this;
		}

		public Criteria andMinStorageNotBetween(Double value1, Double value2) {
			addCriterion("min_storage not between", value1, value2, "minStorage");
			return (Criteria) this;
		}

		public Criteria andMaxStorageIsNull() {
			addCriterion("max_storage is null");
			return (Criteria) this;
		}

		public Criteria andMaxStorageIsNotNull() {
			addCriterion("max_storage is not null");
			return (Criteria) this;
		}

		public Criteria andMaxStorageEqualTo(Double value) {
			addCriterion("max_storage =", value, "maxStorage");
			return (Criteria) this;
		}

		public Criteria andMaxStorageNotEqualTo(Double value) {
			addCriterion("max_storage <>", value, "maxStorage");
			return (Criteria) this;
		}

		public Criteria andMaxStorageGreaterThan(Double value) {
			addCriterion("max_storage >", value, "maxStorage");
			return (Criteria) this;
		}

		public Criteria andMaxStorageGreaterThanOrEqualTo(Double value) {
			addCriterion("max_storage >=", value, "maxStorage");
			return (Criteria) this;
		}

		public Criteria andMaxStorageLessThan(Double value) {
			addCriterion("max_storage <", value, "maxStorage");
			return (Criteria) this;
		}

		public Criteria andMaxStorageLessThanOrEqualTo(Double value) {
			addCriterion("max_storage <=", value, "maxStorage");
			return (Criteria) this;
		}

		public Criteria andMaxStorageIn(List<Double> values) {
			addCriterion("max_storage in", values, "maxStorage");
			return (Criteria) this;
		}

		public Criteria andMaxStorageNotIn(List<Double> values) {
			addCriterion("max_storage not in", values, "maxStorage");
			return (Criteria) this;
		}

		public Criteria andMaxStorageBetween(Double value1, Double value2) {
			addCriterion("max_storage between", value1, value2, "maxStorage");
			return (Criteria) this;
		}

		public Criteria andMaxStorageNotBetween(Double value1, Double value2) {
			addCriterion("max_storage not between", value1, value2, "maxStorage");
			return (Criteria) this;
		}

		public Criteria andFlagIsNull() {
			addCriterion("flag is null");
			return (Criteria) this;
		}

		public Criteria andFlagIsNotNull() {
			addCriterion("flag is not null");
			return (Criteria) this;
		}

		public Criteria andFlagEqualTo(Byte value) {
			addCriterion("flag =", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagNotEqualTo(Byte value) {
			addCriterion("flag <>", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagGreaterThan(Byte value) {
			addCriterion("flag >", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagGreaterThanOrEqualTo(Byte value) {
			addCriterion("flag >=", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagLessThan(Byte value) {
			addCriterion("flag <", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagLessThanOrEqualTo(Byte value) {
			addCriterion("flag <=", value, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagIn(List<Byte> values) {
			addCriterion("flag in", values, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagNotIn(List<Byte> values) {
			addCriterion("flag not in", values, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagBetween(Byte value1, Byte value2) {
			addCriterion("flag between", value1, value2, "flag");
			return (Criteria) this;
		}

		public Criteria andFlagNotBetween(Byte value1, Byte value2) {
			addCriterion("flag not between", value1, value2, "flag");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table storage_info
	 * @mbg.generated  Sun Dec 23 22:01:32 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}



    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table storage_info
     *
     * @mbg.generated do_not_delete_during_merge Sun Dec 23 21:27:05 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}