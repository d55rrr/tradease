package com.yh.tradease.stock.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class InStockExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    public InStockExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andStockTimeIsNull() {
            addCriterion("stock_time is null");
            return (Criteria) this;
        }

        public Criteria andStockTimeIsNotNull() {
            addCriterion("stock_time is not null");
            return (Criteria) this;
        }

        public Criteria andStockTimeEqualTo(Date value) {
            addCriterion("stock_time =", value, "stockTime");
            return (Criteria) this;
        }

        public Criteria andStockTimeNotEqualTo(Date value) {
            addCriterion("stock_time <>", value, "stockTime");
            return (Criteria) this;
        }

        public Criteria andStockTimeGreaterThan(Date value) {
            addCriterion("stock_time >", value, "stockTime");
            return (Criteria) this;
        }

        public Criteria andStockTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("stock_time >=", value, "stockTime");
            return (Criteria) this;
        }

        public Criteria andStockTimeLessThan(Date value) {
            addCriterion("stock_time <", value, "stockTime");
            return (Criteria) this;
        }

        public Criteria andStockTimeLessThanOrEqualTo(Date value) {
            addCriterion("stock_time <=", value, "stockTime");
            return (Criteria) this;
        }

        public Criteria andStockTimeIn(List<Date> values) {
            addCriterion("stock_time in", values, "stockTime");
            return (Criteria) this;
        }

        public Criteria andStockTimeNotIn(List<Date> values) {
            addCriterion("stock_time not in", values, "stockTime");
            return (Criteria) this;
        }

        public Criteria andStockTimeBetween(Date value1, Date value2) {
            addCriterion("stock_time between", value1, value2, "stockTime");
            return (Criteria) this;
        }

        public Criteria andStockTimeNotBetween(Date value1, Date value2) {
            addCriterion("stock_time not between", value1, value2, "stockTime");
            return (Criteria) this;
        }

        public Criteria andTransactorIsNull() {
            addCriterion("transactor is null");
            return (Criteria) this;
        }

        public Criteria andTransactorIsNotNull() {
            addCriterion("transactor is not null");
            return (Criteria) this;
        }

        public Criteria andTransactorEqualTo(String value) {
            addCriterion("transactor =", value, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorNotEqualTo(String value) {
            addCriterion("transactor <>", value, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorGreaterThan(String value) {
            addCriterion("transactor >", value, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorGreaterThanOrEqualTo(String value) {
            addCriterion("transactor >=", value, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorLessThan(String value) {
            addCriterion("transactor <", value, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorLessThanOrEqualTo(String value) {
            addCriterion("transactor <=", value, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorLike(String value) {
            addCriterion("transactor like", value, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorNotLike(String value) {
            addCriterion("transactor not like", value, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorIn(List<String> values) {
            addCriterion("transactor in", values, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorNotIn(List<String> values) {
            addCriterion("transactor not in", values, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorBetween(String value1, String value2) {
            addCriterion("transactor between", value1, value2, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorNotBetween(String value1, String value2) {
            addCriterion("transactor not between", value1, value2, "transactor");
            return (Criteria) this;
        }

        public Criteria andTransactorIdIsNull() {
            addCriterion("transactor_id is null");
            return (Criteria) this;
        }

        public Criteria andTransactorIdIsNotNull() {
            addCriterion("transactor_id is not null");
            return (Criteria) this;
        }

        public Criteria andTransactorIdEqualTo(Integer value) {
            addCriterion("transactor_id =", value, "transactorId");
            return (Criteria) this;
        }

        public Criteria andTransactorIdNotEqualTo(Integer value) {
            addCriterion("transactor_id <>", value, "transactorId");
            return (Criteria) this;
        }

        public Criteria andTransactorIdGreaterThan(Integer value) {
            addCriterion("transactor_id >", value, "transactorId");
            return (Criteria) this;
        }

        public Criteria andTransactorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("transactor_id >=", value, "transactorId");
            return (Criteria) this;
        }

        public Criteria andTransactorIdLessThan(Integer value) {
            addCriterion("transactor_id <", value, "transactorId");
            return (Criteria) this;
        }

        public Criteria andTransactorIdLessThanOrEqualTo(Integer value) {
            addCriterion("transactor_id <=", value, "transactorId");
            return (Criteria) this;
        }

        public Criteria andTransactorIdIn(List<Integer> values) {
            addCriterion("transactor_id in", values, "transactorId");
            return (Criteria) this;
        }

        public Criteria andTransactorIdNotIn(List<Integer> values) {
            addCriterion("transactor_id not in", values, "transactorId");
            return (Criteria) this;
        }

        public Criteria andTransactorIdBetween(Integer value1, Integer value2) {
            addCriterion("transactor_id between", value1, value2, "transactorId");
            return (Criteria) this;
        }

        public Criteria andTransactorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("transactor_id not between", value1, value2, "transactorId");
            return (Criteria) this;
        }

        public Criteria andStockTypeIsNull() {
            addCriterion("stock_type is null");
            return (Criteria) this;
        }

        public Criteria andStockTypeIsNotNull() {
            addCriterion("stock_type is not null");
            return (Criteria) this;
        }

        public Criteria andStockTypeEqualTo(Byte value) {
            addCriterion("stock_type =", value, "stockType");
            return (Criteria) this;
        }

        public Criteria andStockTypeNotEqualTo(Byte value) {
            addCriterion("stock_type <>", value, "stockType");
            return (Criteria) this;
        }

        public Criteria andStockTypeGreaterThan(Byte value) {
            addCriterion("stock_type >", value, "stockType");
            return (Criteria) this;
        }

        public Criteria andStockTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("stock_type >=", value, "stockType");
            return (Criteria) this;
        }

        public Criteria andStockTypeLessThan(Byte value) {
            addCriterion("stock_type <", value, "stockType");
            return (Criteria) this;
        }

        public Criteria andStockTypeLessThanOrEqualTo(Byte value) {
            addCriterion("stock_type <=", value, "stockType");
            return (Criteria) this;
        }

        public Criteria andStockTypeIn(List<Byte> values) {
            addCriterion("stock_type in", values, "stockType");
            return (Criteria) this;
        }

        public Criteria andStockTypeNotIn(List<Byte> values) {
            addCriterion("stock_type not in", values, "stockType");
            return (Criteria) this;
        }

        public Criteria andStockTypeBetween(Byte value1, Byte value2) {
            addCriterion("stock_type between", value1, value2, "stockType");
            return (Criteria) this;
        }

        public Criteria andStockTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("stock_type not between", value1, value2, "stockType");
            return (Criteria) this;
        }

        public Criteria andInStatusIsNull() {
            addCriterion("in_status is null");
            return (Criteria) this;
        }

        public Criteria andInStatusIsNotNull() {
            addCriterion("in_status is not null");
            return (Criteria) this;
        }

        public Criteria andInStatusEqualTo(Byte value) {
            addCriterion("in_status =", value, "inStatus");
            return (Criteria) this;
        }

        public Criteria andInStatusNotEqualTo(Byte value) {
            addCriterion("in_status <>", value, "inStatus");
            return (Criteria) this;
        }

        public Criteria andInStatusGreaterThan(Byte value) {
            addCriterion("in_status >", value, "inStatus");
            return (Criteria) this;
        }

        public Criteria andInStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("in_status >=", value, "inStatus");
            return (Criteria) this;
        }

        public Criteria andInStatusLessThan(Byte value) {
            addCriterion("in_status <", value, "inStatus");
            return (Criteria) this;
        }

        public Criteria andInStatusLessThanOrEqualTo(Byte value) {
            addCriterion("in_status <=", value, "inStatus");
            return (Criteria) this;
        }

        public Criteria andInStatusIn(List<Byte> values) {
            addCriterion("in_status in", values, "inStatus");
            return (Criteria) this;
        }

        public Criteria andInStatusNotIn(List<Byte> values) {
            addCriterion("in_status not in", values, "inStatus");
            return (Criteria) this;
        }

        public Criteria andInStatusBetween(Byte value1, Byte value2) {
            addCriterion("in_status between", value1, value2, "inStatus");
            return (Criteria) this;
        }

        public Criteria andInStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("in_status not between", value1, value2, "inStatus");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeIsNull() {
            addCriterion("delivery_type is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeIsNotNull() {
            addCriterion("delivery_type is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeEqualTo(Byte value) {
            addCriterion("delivery_type =", value, "deliveryType");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeNotEqualTo(Byte value) {
            addCriterion("delivery_type <>", value, "deliveryType");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeGreaterThan(Byte value) {
            addCriterion("delivery_type >", value, "deliveryType");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("delivery_type >=", value, "deliveryType");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeLessThan(Byte value) {
            addCriterion("delivery_type <", value, "deliveryType");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeLessThanOrEqualTo(Byte value) {
            addCriterion("delivery_type <=", value, "deliveryType");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeIn(List<Byte> values) {
            addCriterion("delivery_type in", values, "deliveryType");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeNotIn(List<Byte> values) {
            addCriterion("delivery_type not in", values, "deliveryType");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeBetween(Byte value1, Byte value2) {
            addCriterion("delivery_type between", value1, value2, "deliveryType");
            return (Criteria) this;
        }

        public Criteria andDeliveryTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("delivery_type not between", value1, value2, "deliveryType");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andTotalPriceIsNull() {
            addCriterion("total_price is null");
            return (Criteria) this;
        }

        public Criteria andTotalPriceIsNotNull() {
            addCriterion("total_price is not null");
            return (Criteria) this;
        }

        public Criteria andTotalPriceEqualTo(Double value) {
            addCriterion("total_price =", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceNotEqualTo(Double value) {
            addCriterion("total_price <>", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceGreaterThan(Double value) {
            addCriterion("total_price >", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("total_price >=", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceLessThan(Double value) {
            addCriterion("total_price <", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceLessThanOrEqualTo(Double value) {
            addCriterion("total_price <=", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceIn(List<Double> values) {
            addCriterion("total_price in", values, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceNotIn(List<Double> values) {
            addCriterion("total_price not in", values, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceBetween(Double value1, Double value2) {
            addCriterion("total_price between", value1, value2, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceNotBetween(Double value1, Double value2) {
            addCriterion("total_price not between", value1, value2, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andRealPriceIsNull() {
            addCriterion("real_price is null");
            return (Criteria) this;
        }

        public Criteria andRealPriceIsNotNull() {
            addCriterion("real_price is not null");
            return (Criteria) this;
        }

        public Criteria andRealPriceEqualTo(Double value) {
            addCriterion("real_price =", value, "realPrice");
            return (Criteria) this;
        }

        public Criteria andRealPriceNotEqualTo(Double value) {
            addCriterion("real_price <>", value, "realPrice");
            return (Criteria) this;
        }

        public Criteria andRealPriceGreaterThan(Double value) {
            addCriterion("real_price >", value, "realPrice");
            return (Criteria) this;
        }

        public Criteria andRealPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("real_price >=", value, "realPrice");
            return (Criteria) this;
        }

        public Criteria andRealPriceLessThan(Double value) {
            addCriterion("real_price <", value, "realPrice");
            return (Criteria) this;
        }

        public Criteria andRealPriceLessThanOrEqualTo(Double value) {
            addCriterion("real_price <=", value, "realPrice");
            return (Criteria) this;
        }

        public Criteria andRealPriceIn(List<Double> values) {
            addCriterion("real_price in", values, "realPrice");
            return (Criteria) this;
        }

        public Criteria andRealPriceNotIn(List<Double> values) {
            addCriterion("real_price not in", values, "realPrice");
            return (Criteria) this;
        }

        public Criteria andRealPriceBetween(Double value1, Double value2) {
            addCriterion("real_price between", value1, value2, "realPrice");
            return (Criteria) this;
        }

        public Criteria andRealPriceNotBetween(Double value1, Double value2) {
            addCriterion("real_price not between", value1, value2, "realPrice");
            return (Criteria) this;
        }

        public Criteria andPayedIsNull() {
            addCriterion("payed is null");
            return (Criteria) this;
        }

        public Criteria andPayedIsNotNull() {
            addCriterion("payed is not null");
            return (Criteria) this;
        }

        public Criteria andPayedEqualTo(Double value) {
            addCriterion("payed =", value, "payed");
            return (Criteria) this;
        }

        public Criteria andPayedNotEqualTo(Double value) {
            addCriterion("payed <>", value, "payed");
            return (Criteria) this;
        }

        public Criteria andPayedGreaterThan(Double value) {
            addCriterion("payed >", value, "payed");
            return (Criteria) this;
        }

        public Criteria andPayedGreaterThanOrEqualTo(Double value) {
            addCriterion("payed >=", value, "payed");
            return (Criteria) this;
        }

        public Criteria andPayedLessThan(Double value) {
            addCriterion("payed <", value, "payed");
            return (Criteria) this;
        }

        public Criteria andPayedLessThanOrEqualTo(Double value) {
            addCriterion("payed <=", value, "payed");
            return (Criteria) this;
        }

        public Criteria andPayedIn(List<Double> values) {
            addCriterion("payed in", values, "payed");
            return (Criteria) this;
        }

        public Criteria andPayedNotIn(List<Double> values) {
            addCriterion("payed not in", values, "payed");
            return (Criteria) this;
        }

        public Criteria andPayedBetween(Double value1, Double value2) {
            addCriterion("payed between", value1, value2, "payed");
            return (Criteria) this;
        }

        public Criteria andPayedNotBetween(Double value1, Double value2) {
            addCriterion("payed not between", value1, value2, "payed");
            return (Criteria) this;
        }

        public Criteria andUnpayedIsNull() {
            addCriterion("unpayed is null");
            return (Criteria) this;
        }

        public Criteria andUnpayedIsNotNull() {
            addCriterion("unpayed is not null");
            return (Criteria) this;
        }

        public Criteria andUnpayedEqualTo(Double value) {
            addCriterion("unpayed =", value, "unpayed");
            return (Criteria) this;
        }

        public Criteria andUnpayedNotEqualTo(Double value) {
            addCriterion("unpayed <>", value, "unpayed");
            return (Criteria) this;
        }

        public Criteria andUnpayedGreaterThan(Double value) {
            addCriterion("unpayed >", value, "unpayed");
            return (Criteria) this;
        }

        public Criteria andUnpayedGreaterThanOrEqualTo(Double value) {
            addCriterion("unpayed >=", value, "unpayed");
            return (Criteria) this;
        }

        public Criteria andUnpayedLessThan(Double value) {
            addCriterion("unpayed <", value, "unpayed");
            return (Criteria) this;
        }

        public Criteria andUnpayedLessThanOrEqualTo(Double value) {
            addCriterion("unpayed <=", value, "unpayed");
            return (Criteria) this;
        }

        public Criteria andUnpayedIn(List<Double> values) {
            addCriterion("unpayed in", values, "unpayed");
            return (Criteria) this;
        }

        public Criteria andUnpayedNotIn(List<Double> values) {
            addCriterion("unpayed not in", values, "unpayed");
            return (Criteria) this;
        }

        public Criteria andUnpayedBetween(Double value1, Double value2) {
            addCriterion("unpayed between", value1, value2, "unpayed");
            return (Criteria) this;
        }

        public Criteria andUnpayedNotBetween(Double value1, Double value2) {
            addCriterion("unpayed not between", value1, value2, "unpayed");
            return (Criteria) this;
        }

        public Criteria andCdateIsNull() {
            addCriterion("cdate is null");
            return (Criteria) this;
        }

        public Criteria andCdateIsNotNull() {
            addCriterion("cdate is not null");
            return (Criteria) this;
        }

        public Criteria andCdateEqualTo(Date value) {
            addCriterion("cdate =", value, "cdate");
            return (Criteria) this;
        }

        public Criteria andCdateNotEqualTo(Date value) {
            addCriterion("cdate <>", value, "cdate");
            return (Criteria) this;
        }

        public Criteria andCdateGreaterThan(Date value) {
            addCriterion("cdate >", value, "cdate");
            return (Criteria) this;
        }

        public Criteria andCdateGreaterThanOrEqualTo(Date value) {
            addCriterion("cdate >=", value, "cdate");
            return (Criteria) this;
        }

        public Criteria andCdateLessThan(Date value) {
            addCriterion("cdate <", value, "cdate");
            return (Criteria) this;
        }

        public Criteria andCdateLessThanOrEqualTo(Date value) {
            addCriterion("cdate <=", value, "cdate");
            return (Criteria) this;
        }

        public Criteria andCdateIn(List<Date> values) {
            addCriterion("cdate in", values, "cdate");
            return (Criteria) this;
        }

        public Criteria andCdateNotIn(List<Date> values) {
            addCriterion("cdate not in", values, "cdate");
            return (Criteria) this;
        }

        public Criteria andCdateBetween(Date value1, Date value2) {
            addCriterion("cdate between", value1, value2, "cdate");
            return (Criteria) this;
        }

        public Criteria andCdateNotBetween(Date value1, Date value2) {
            addCriterion("cdate not between", value1, value2, "cdate");
            return (Criteria) this;
        }

        public Criteria andMdateIsNull() {
            addCriterion("mdate is null");
            return (Criteria) this;
        }

        public Criteria andMdateIsNotNull() {
            addCriterion("mdate is not null");
            return (Criteria) this;
        }

        public Criteria andMdateEqualTo(Date value) {
            addCriterion("mdate =", value, "mdate");
            return (Criteria) this;
        }

        public Criteria andMdateNotEqualTo(Date value) {
            addCriterion("mdate <>", value, "mdate");
            return (Criteria) this;
        }

        public Criteria andMdateGreaterThan(Date value) {
            addCriterion("mdate >", value, "mdate");
            return (Criteria) this;
        }

        public Criteria andMdateGreaterThanOrEqualTo(Date value) {
            addCriterion("mdate >=", value, "mdate");
            return (Criteria) this;
        }

        public Criteria andMdateLessThan(Date value) {
            addCriterion("mdate <", value, "mdate");
            return (Criteria) this;
        }

        public Criteria andMdateLessThanOrEqualTo(Date value) {
            addCriterion("mdate <=", value, "mdate");
            return (Criteria) this;
        }

        public Criteria andMdateIn(List<Date> values) {
            addCriterion("mdate in", values, "mdate");
            return (Criteria) this;
        }

        public Criteria andMdateNotIn(List<Date> values) {
            addCriterion("mdate not in", values, "mdate");
            return (Criteria) this;
        }

        public Criteria andMdateBetween(Date value1, Date value2) {
            addCriterion("mdate between", value1, value2, "mdate");
            return (Criteria) this;
        }

        public Criteria andMdateNotBetween(Date value1, Date value2) {
            addCriterion("mdate not between", value1, value2, "mdate");
            return (Criteria) this;
        }

        public Criteria andFlagIsNull() {
            addCriterion("flag is null");
            return (Criteria) this;
        }

        public Criteria andFlagIsNotNull() {
            addCriterion("flag is not null");
            return (Criteria) this;
        }

        public Criteria andFlagEqualTo(Byte value) {
            addCriterion("flag =", value, "flag");
            return (Criteria) this;
        }

        public Criteria andFlagNotEqualTo(Byte value) {
            addCriterion("flag <>", value, "flag");
            return (Criteria) this;
        }

        public Criteria andFlagGreaterThan(Byte value) {
            addCriterion("flag >", value, "flag");
            return (Criteria) this;
        }

        public Criteria andFlagGreaterThanOrEqualTo(Byte value) {
            addCriterion("flag >=", value, "flag");
            return (Criteria) this;
        }

        public Criteria andFlagLessThan(Byte value) {
            addCriterion("flag <", value, "flag");
            return (Criteria) this;
        }

        public Criteria andFlagLessThanOrEqualTo(Byte value) {
            addCriterion("flag <=", value, "flag");
            return (Criteria) this;
        }

        public Criteria andFlagIn(List<Byte> values) {
            addCriterion("flag in", values, "flag");
            return (Criteria) this;
        }

        public Criteria andFlagNotIn(List<Byte> values) {
            addCriterion("flag not in", values, "flag");
            return (Criteria) this;
        }

        public Criteria andFlagBetween(Byte value1, Byte value2) {
            addCriterion("flag between", value1, value2, "flag");
            return (Criteria) this;
        }

        public Criteria andFlagNotBetween(Byte value1, Byte value2) {
            addCriterion("flag not between", value1, value2, "flag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table in_stock
     *
     * @mbg.generated do_not_delete_during_merge Thu Dec 20 00:21:32 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table in_stock
     *
     * @mbg.generated Thu Dec 20 00:21:32 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}