<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yh.tradease.stock.dao.InStockDetailMapper">
  <resultMap id="BaseResultMap" type="com.yh.tradease.stock.entity.InStockDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stock_id" jdbcType="INTEGER" property="stockId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="stock_status" jdbcType="DOUBLE" property="stockStatus" />
    <result column="warehouse" jdbcType="VARCHAR" property="warehouse" />
    <result column="warehouse_id" jdbcType="INTEGER" property="warehouseId" />
    <result column="stock_time" jdbcType="TIMESTAMP" property="stockTime" />
    <result column="cdate" jdbcType="TIMESTAMP" property="cdate" />
    <result column="mdate" jdbcType="TIMESTAMP" property="mdate" />
    <result column="flag" jdbcType="TINYINT" property="flag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stock_id, product_name, product_id, amount, price, stock_status, warehouse, warehouse_id, 
    stock_time, cdate, mdate, flag
  </sql>
  <select id="selectByExample" parameterType="com.yh.tradease.stock.entity.InStockDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from in_stock_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from in_stock_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from in_stock_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yh.tradease.stock.entity.InStockDetailExample">
    delete from in_stock_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yh.tradease.stock.entity.InStockDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into in_stock_detail (stock_id, product_name, product_id, 
      amount, price, stock_status, 
      warehouse, warehouse_id, stock_time, 
      cdate, mdate, flag
      )
    values (#{stockId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, 
      #{amount,jdbcType=DOUBLE}, #{price,jdbcType=DOUBLE}, #{stockStatus,jdbcType=DOUBLE}, 
      #{warehouse,jdbcType=VARCHAR}, #{warehouseId,jdbcType=INTEGER}, #{stockTime,jdbcType=TIMESTAMP}, 
      #{cdate,jdbcType=TIMESTAMP}, #{mdate,jdbcType=TIMESTAMP}, #{flag,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yh.tradease.stock.entity.InStockDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into in_stock_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockId != null">
        stock_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="stockStatus != null">
        stock_status,
      </if>
      <if test="warehouse != null">
        warehouse,
      </if>
      <if test="warehouseId != null">
        warehouse_id,
      </if>
      <if test="stockTime != null">
        stock_time,
      </if>
      <if test="cdate != null">
        cdate,
      </if>
      <if test="mdate != null">
        mdate,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockId != null">
        #{stockId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="stockStatus != null">
        #{stockStatus,jdbcType=DOUBLE},
      </if>
      <if test="warehouse != null">
        #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null">
        #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="stockTime != null">
        #{stockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cdate != null">
        #{cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="mdate != null">
        #{mdate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yh.tradease.stock.entity.InStockDetailExample" resultType="java.lang.Long">
    select count(*) from in_stock_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update in_stock_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stockId != null">
        stock_id = #{record.stockId,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.stockStatus != null">
        stock_status = #{record.stockStatus,jdbcType=DOUBLE},
      </if>
      <if test="record.warehouse != null">
        warehouse = #{record.warehouse,jdbcType=VARCHAR},
      </if>
      <if test="record.warehouseId != null">
        warehouse_id = #{record.warehouseId,jdbcType=INTEGER},
      </if>
      <if test="record.stockTime != null">
        stock_time = #{record.stockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cdate != null">
        cdate = #{record.cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mdate != null">
        mdate = #{record.mdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update in_stock_detail
    set id = #{record.id,jdbcType=INTEGER},
      stock_id = #{record.stockId,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      price = #{record.price,jdbcType=DOUBLE},
      stock_status = #{record.stockStatus,jdbcType=DOUBLE},
      warehouse = #{record.warehouse,jdbcType=VARCHAR},
      warehouse_id = #{record.warehouseId,jdbcType=INTEGER},
      stock_time = #{record.stockTime,jdbcType=TIMESTAMP},
      cdate = #{record.cdate,jdbcType=TIMESTAMP},
      mdate = #{record.mdate,jdbcType=TIMESTAMP},
      flag = #{record.flag,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yh.tradease.stock.entity.InStockDetail">
    update in_stock_detail
    <set>
      <if test="stockId != null">
        stock_id = #{stockId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="stockStatus != null">
        stock_status = #{stockStatus,jdbcType=DOUBLE},
      </if>
      <if test="warehouse != null">
        warehouse = #{warehouse,jdbcType=VARCHAR},
      </if>
      <if test="warehouseId != null">
        warehouse_id = #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="stockTime != null">
        stock_time = #{stockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cdate != null">
        cdate = #{cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="mdate != null">
        mdate = #{mdate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yh.tradease.stock.entity.InStockDetail">
    update in_stock_detail
    set stock_id = #{stockId,jdbcType=INTEGER},
      product_name = #{productName,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      price = #{price,jdbcType=DOUBLE},
      stock_status = #{stockStatus,jdbcType=DOUBLE},
      warehouse = #{warehouse,jdbcType=VARCHAR},
      warehouse_id = #{warehouseId,jdbcType=INTEGER},
      stock_time = #{stockTime,jdbcType=TIMESTAMP},
      cdate = #{cdate,jdbcType=TIMESTAMP},
      mdate = #{mdate,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>