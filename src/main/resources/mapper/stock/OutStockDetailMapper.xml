<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yh.tradease.stock.dao.OutStockDetailMapper">
  <resultMap id="BaseResultMap" type="com.yh.tradease.stock.entity.OutStockDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="out_id" jdbcType="INTEGER" property="outId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="out_status" jdbcType="TINYINT" property="outStatus" />
    <result column="cdate" jdbcType="TIMESTAMP" property="cdate" />
    <result column="mdate" jdbcType="TIMESTAMP" property="mdate" />
    <result column="flag" jdbcType="TINYINT" property="flag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, out_id, product_name, product_id, amount, out_status, cdate, mdate, flag
  </sql>
  <select id="selectByExample" parameterType="com.yh.tradease.stock.entity.OutStockDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from out_stock_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from out_stock_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from out_stock_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yh.tradease.stock.entity.OutStockDetailExample">
    delete from out_stock_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yh.tradease.stock.entity.OutStockDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into out_stock_detail (out_id, product_name, product_id, 
      amount, out_status, cdate, 
      mdate, flag)
    values (#{outId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, 
      #{amount,jdbcType=DOUBLE}, #{outStatus,jdbcType=TINYINT}, #{cdate,jdbcType=TIMESTAMP}, 
      #{mdate,jdbcType=TIMESTAMP}, #{flag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yh.tradease.stock.entity.OutStockDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into out_stock_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outId != null">
        out_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="outStatus != null">
        out_status,
      </if>
      <if test="cdate != null">
        cdate,
      </if>
      <if test="mdate != null">
        mdate,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outId != null">
        #{outId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="outStatus != null">
        #{outStatus,jdbcType=TINYINT},
      </if>
      <if test="cdate != null">
        #{cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="mdate != null">
        #{mdate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yh.tradease.stock.entity.OutStockDetailExample" resultType="java.lang.Long">
    select count(*) from out_stock_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update out_stock_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.outId != null">
        out_id = #{record.outId,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.outStatus != null">
        out_status = #{record.outStatus,jdbcType=TINYINT},
      </if>
      <if test="record.cdate != null">
        cdate = #{record.cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mdate != null">
        mdate = #{record.mdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update out_stock_detail
    set id = #{record.id,jdbcType=INTEGER},
      out_id = #{record.outId,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      out_status = #{record.outStatus,jdbcType=TINYINT},
      cdate = #{record.cdate,jdbcType=TIMESTAMP},
      mdate = #{record.mdate,jdbcType=TIMESTAMP},
      flag = #{record.flag,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yh.tradease.stock.entity.OutStockDetail">
    update out_stock_detail
    <set>
      <if test="outId != null">
        out_id = #{outId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="outStatus != null">
        out_status = #{outStatus,jdbcType=TINYINT},
      </if>
      <if test="cdate != null">
        cdate = #{cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="mdate != null">
        mdate = #{mdate,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yh.tradease.stock.entity.OutStockDetail">
    update out_stock_detail
    set out_id = #{outId,jdbcType=INTEGER},
      product_name = #{productName,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      out_status = #{outStatus,jdbcType=TINYINT},
      cdate = #{cdate,jdbcType=TIMESTAMP},
      mdate = #{mdate,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>